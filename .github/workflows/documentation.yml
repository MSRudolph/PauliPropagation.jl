# Generates the package documentation via Documenter.jl,
# and deploys it to Github Pages, as per the hosting guide
# at https://documenter.juliadocs.org/stable/man/hosting/.
# See /docs/make.jl for more information about generation.

name: Documentation


# Regenerate doc (updating Github Pages site) whenever...
on:
  # main is updated (updates root site with new release), or
  # dev is updated (updates /dev/ subdomain)
  push:
    branches:
      - main
      - dev
  # a PR is opened to the below branches (updates /previews/PR#)
  pull_request:
    branches:
      - main
      - dev
  # the workflow is manually triggered from the Actions tab (updates /dev/)
  workflow_dispatch:


# prevent concurrent doc gen
concurrency:
    group: doc
    cancel-in-progress: false


# give both doc-gen and tidy jobs below necessary 
# access to read/write from the gh-pages branch
permissions:
    actions: write
    contents: write
    pull-requests: read
    statuses: write


jobs:

  # regenerate the doxygen using Documenter.jl
  # and re-deploy it to the gh-pages branch
  build-doc:
    name: Build and deploy documentation
    runs-on: ubuntu-latest

    steps:

      # generate doc using files from the triggering branch
      - name: Obtain PP
        uses: actions/checkout@v4
    
      - name: Setup Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: '1'

      # using cache speeds up workflow
      - name: Setup Julia cache
        uses: julia-actions/cache@v2

      - name: Install dependencies
        shell: julia --color=yes --project=docs {0}
        run: |
          using Pkg
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.instantiate()

      # symlink repo README to 'docs/src/index.md'
      # as needed by subsequent doc generation
      - name: Setup symlink
        run: ln -s ../../README.md index.md
        working-directory: docs/src

      - name: Build and deploy
        run: julia --color=yes --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # delete superfluous files remaining on the 
  # gh-pages branch to speed up user cloning
  tidy-doc:
    name: Tidy documentation
    runs-on: ubuntu-latest

    # perform this after doc regen
    needs: build-doc

    # only cleanup when main is pushed, preserving all the
    # working clones of the doc (like from PRs) in the meantime
    if: github.event_name == 'push' && github.ref_name == 'main'

    steps:

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      # make a cleaning commit as "Documenter.jl" bot
      - name: Delete preview and history + push changes
        run: |
          if [ -d "${preview_dir}" ]; then
              git config user.name "Documenter.jl"
              git config user.email "documenter@juliadocs.github.io"
              git rm -rf "${preview_dir}"
              git commit -m "delete preview"
              git branch gh-pages-new "$(echo "delete history" | git commit-tree "HEAD^{tree}")"
              git push --force origin gh-pages-new:gh-pages
          fi
        env:
          preview_dir: previews/PR${{ github.event.number }}
